{"ast":null,"code":"import { __read, __spread } from \"tslib\";\nimport { options } from \"../Options\";\n/**\r\n * Outputs string to console if `verbose` is `true`.\r\n */\n\nexport function log() {\n  var messages = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    messages[_i] = arguments[_i];\n  }\n\n  if (options.verbose) {\n    if (console) {\n      console.log.apply(console, __spread(messages));\n    }\n  }\n}\n/**\r\n * Outputs a warning to the console.\r\n */\n\nexport function warn() {\n  var messages = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    messages[_i] = arguments[_i];\n  }\n\n  if (console) {\n    console.warn.apply(console, __spread(messages));\n  }\n}","map":{"version":3,"sources":["../../../../../src/.internal/core/utils/Log.ts"],"names":[],"mappings":";AAAA,SAAS,OAAT,QAAwB,YAAxB;AAEA;;;;AAGA,OAAM,SAAU,GAAV,GAAa;AAAC,MAAA,QAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAuB;AAAvB,IAAA,QAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACnB,MAAI,OAAO,CAAC,OAAZ,EAAqB;AACpB,QAAI,OAAJ,EAAa;AACZ,MAAA,OAAO,CAAC,GAAR,CAAW,KAAX,CAAA,OAAA,EAAO,QAAA,CAAQ,QAAR,CAAP;AACA;AACD;AACD;AAED;;;;AAGA,OAAM,SAAU,IAAV,GAAc;AAAC,MAAA,QAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAuB;AAAvB,IAAA,QAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACpB,MAAI,OAAJ,EAAa;AACZ,IAAA,OAAO,CAAC,IAAR,CAAY,KAAZ,CAAA,OAAA,EAAO,QAAA,CAAS,QAAT,CAAP;AACA;AACD","sourcesContent":["import { options } from \"../Options\";\n\n/**\n * Outputs string to console if `verbose` is `true`.\n */\nexport function log(...messages: Array<any>): void {\n\tif (options.verbose) {\n\t\tif (console) {\n\t\t\tconsole.log(...messages);\n\t\t}\n\t}\n}\n\n/**\n * Outputs a warning to the console.\n */\nexport function warn(...messages: Array<any>): void {\n\tif (console) {\n\t\tconsole.warn(...messages);\n\t}\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}