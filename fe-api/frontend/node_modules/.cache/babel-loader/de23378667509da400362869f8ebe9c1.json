{"ast":null,"code":"var _jsxFileName = \"/Users/bradley.shields/Projects/docker_whale_race/fe-api/frontend/src/components/Barchart.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport am4themesAnimated from '@amcharts/amcharts4/themes/animated';\nimport _ from 'lodash'; // CODE TAKEN FROM\n// https://medium.com/@aamine/data-visualization-with-react-amcharts-11a2dddbde06\n\nlet theme = {\n  name: 'dark',\n  gridColor: '#FFFFFF',\n  gridWidth: 1,\n  gridOpacity: 0.75,\n  labelsColor: '#FFFFFF',\n  seriesOpacity: 1,\n  colors: ['#FF7E6B', '#028090', '#FFE74C', '#FF5964', '#93E1D8', '#E15554', '#33CA7F', '#878787']\n};\nexport class BarChart extends Component {\n  componentDidMount() {\n    this.initChart();\n  }\n\n  componentDidUpdate(prevProps) {\n    //Handle refreshing the chart when the dataset changes\n    if (!_.isEqual(prevProps.data, this.props.data)) {\n      if (this.chart._super) {\n        this.chart.dispose();\n      }\n\n      this.initChart();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.chart._super) {\n      this.chart.dispose();\n    }\n  }\n\n  initChart() {\n    const {\n      chartId,\n      data,\n      categoryLabel,\n      valueLabel,\n      rtl\n    } = this.props;\n    am4core.useTheme(am4themesAnimated);\n    this.chart = am4core.create(chartId, am4charts.XYChart);\n    this.chart.colors.list = theme.colors.map(color => am4core.color(color)); //construct category axis\n\n    const categoryAxis = this.chart.xAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.dataFields.category = categoryLabel; //style category axis grid\n\n    categoryAxis.renderer.grid.template.location = 0;\n    categoryAxis.renderer.grid.template.stroke = am4core.color(theme.gridColor);\n    categoryAxis.renderer.grid.template.strokeOpacity = theme.gridOpacity; //style category axis labels\n\n    categoryAxis.renderer.labels.template.fill = am4core.color(theme.labelsColor);\n    categoryAxis.renderer.labels.template.location = 0.5;\n    categoryAxis.renderer.labels.template.wrap = false;\n    categoryAxis.renderer.labels.template.truncate = false;\n    categoryAxis.renderer.minGridDistance = 30;\n    categoryAxis.layout = \"horizontal\"; //construct value axis\n\n    const valueAxis = this.chart.yAxes.push(new am4charts.ValueAxis()); //flip value access for rtl languages\n\n    valueAxis.renderer.opposite = rtl; //style value axis grid\n\n    valueAxis.renderer.grid.template.stroke = am4core.color(theme.gridColor);\n    valueAxis.renderer.grid.template.strokeOpacity = theme.gridOpacity;\n    valueAxis.renderer.grid.template.strokeWidth = theme.gridWidth;\n    valueAxis.renderer.grid.template.gridCount = 349742083402;\n    valueAxis.renderer.labels.template.fill = am4core.color(theme.labelsColor);\n    valueAxis.min = 0; //format data\n\n    let formattedData = [];\n    data.forEach(lineSeries => {\n      const name = lineSeries.groupName || valueLabel;\n      lineSeries.data.forEach(dataRow => {\n        const result = {};\n        result[categoryLabel] = dataRow.label;\n        result[name] = dataRow.value;\n        formattedData.push(result);\n      });\n      formattedData = _.orderBy(formattedData, ['year'], ['asc']);\n      this.chart.data = rtl ? formattedData.reverse() : formattedData; // Create data series\n\n      const series = this.chart.series.push(new am4charts.ColumnSeries());\n      series.dataFields.categoryX = categoryLabel;\n      series.dataFields.valueY = name;\n      series.name = name;\n      series.strokeWidth = 3;\n      const columnTemplate = series.columns.template;\n      columnTemplate.strokeWidth = 2;\n      columnTemplate.strokeOpacity = 1;\n      columnTemplate.fillOpacity = theme.seriesOpacity;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: this.props.chartId,\n      className: \"graph\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\nBarChart.propTypes = {\n  chartId: PropTypes.string.isRequired,\n  categoryLabel: PropTypes.string.isRequired,\n  valueLabel: PropTypes.string.isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  }).isRequired).isRequired,\n  rtl: PropTypes.bool\n};\nBarChart.defaultProps = {\n  rtl: false\n};","map":{"version":3,"sources":["/Users/bradley.shields/Projects/docker_whale_race/fe-api/frontend/src/components/Barchart.js"],"names":["React","Component","PropTypes","am4core","am4charts","am4themesAnimated","_","theme","name","gridColor","gridWidth","gridOpacity","labelsColor","seriesOpacity","colors","BarChart","componentDidMount","initChart","componentDidUpdate","prevProps","isEqual","data","props","chart","_super","dispose","componentWillUnmount","chartId","categoryLabel","valueLabel","rtl","useTheme","create","XYChart","list","map","color","categoryAxis","xAxes","push","CategoryAxis","dataFields","category","renderer","grid","template","location","stroke","strokeOpacity","labels","fill","wrap","truncate","minGridDistance","layout","valueAxis","yAxes","ValueAxis","opposite","strokeWidth","gridCount","min","formattedData","forEach","lineSeries","groupName","dataRow","result","label","value","orderBy","reverse","series","ColumnSeries","categoryX","valueY","columnTemplate","columns","fillOpacity","render","propTypes","string","isRequired","arrayOf","shape","number","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport am4themesAnimated from '@amcharts/amcharts4/themes/animated';\nimport _ from 'lodash';\n\n// CODE TAKEN FROM\n// https://medium.com/@aamine/data-visualization-with-react-amcharts-11a2dddbde06\n\nlet theme = {\n    name: 'dark',\n    gridColor: '#FFFFFF',\n    gridWidth: 1,\n    gridOpacity: 0.75,\n    labelsColor: '#FFFFFF',\n    seriesOpacity: 1,\n    colors: [\n        '#FF7E6B',\n        '#028090',\n        '#FFE74C',\n        '#FF5964',\n        '#93E1D8',\n        '#E15554',\n        '#33CA7F',\n        '#878787',\n    ]\n}\n\n\nexport class BarChart extends Component {\n      static propTypes = {\n        chartId: PropTypes.string.isRequired,\n        categoryLabel: PropTypes.string.isRequired,\n        valueLabel: PropTypes.string.isRequired,\n        data: PropTypes.arrayOf(\n          PropTypes.shape({\n            label: PropTypes.string.isRequired,\n            value: PropTypes.number.isRequired,\n          }).isRequired,\n        ).isRequired,\n        rtl: PropTypes.bool,\n      };\n\n      static defaultProps = {\n        rtl: false\n      };\n\n      componentDidMount() {\n        this.initChart();\n      }\n\n      componentDidUpdate(prevProps) {\n        //Handle refreshing the chart when the dataset changes\n        if(!_.isEqual(prevProps.data, this.props.data)) {\n          if(this.chart._super) {\n            this.chart.dispose();\n          }\n          this.initChart();\n        }\n      }\n\n      componentWillUnmount() {\n        if(this.chart._super) {\n        this.chart.dispose();\n        }\n      }\n\n      initChart() {\n        const { chartId, data, categoryLabel, valueLabel, rtl } = this.props;\n        am4core.useTheme(am4themesAnimated);\n        this.chart = am4core.create(chartId, am4charts.XYChart);\n    \n        this.chart.colors.list = theme.colors.map(color => am4core.color(color));\n    \n        //construct category axis\n        const categoryAxis = this.chart.xAxes.push(new am4charts.CategoryAxis());\n        categoryAxis.dataFields.category = categoryLabel;\n    \n        //style category axis grid\n        categoryAxis.renderer.grid.template.location = 0;\n        categoryAxis.renderer.grid.template.stroke = am4core.color(theme.gridColor);\n        categoryAxis.renderer.grid.template.strokeOpacity =theme.gridOpacity;\n    \n        //style category axis labels\n        categoryAxis.renderer.labels.template.fill = am4core.color(theme.labelsColor);\n        categoryAxis.renderer.labels.template.location = 0.5 ;\n        categoryAxis.renderer.labels.template.wrap = false;\n        categoryAxis.renderer.labels.template.truncate = false;\n    \n        categoryAxis.renderer.minGridDistance = 30;\n        categoryAxis.layout = \"horizontal\";\n    \n        //construct value axis\n        const valueAxis = this.chart.yAxes.push(new am4charts.ValueAxis());\n    \n        //flip value access for rtl languages\n        valueAxis.renderer.opposite = rtl\n    \n        //style value axis grid\n        valueAxis.renderer.grid.template.stroke = am4core.color(theme.gridColor);\n        valueAxis.renderer.grid.template.strokeOpacity =theme.gridOpacity;\n        valueAxis.renderer.grid.template.strokeWidth = theme.gridWidth;\n        valueAxis.renderer.grid.template.gridCount = 349742083402\n    \n        valueAxis.renderer.labels.template.fill = am4core.color(theme.labelsColor);\n        valueAxis.min = 0;\n    \n        //format data\n        let formattedData = [];\n    \n        data.forEach(lineSeries => {\n            const name = lineSeries.groupName || valueLabel;\n            lineSeries.data.forEach(dataRow => {\n                const result = {};\n                result[categoryLabel] = dataRow.label;\n                result[name] = dataRow.value;\n    \n                formattedData.push(result);\n            });\n            formattedData = _.orderBy(formattedData, ['year'], ['asc']);\n            this.chart.data = rtl ? formattedData.reverse() : formattedData;\n    \n            // Create data series\n            const series = this.chart.series.push(new am4charts.ColumnSeries());\n    \n            series.dataFields.categoryX =  categoryLabel;\n            series.dataFields.valueY = name;\n            series.name = name;\n            series.strokeWidth = 3;\n    \n            const columnTemplate = series.columns.template;\n            columnTemplate.strokeWidth = 2;\n            columnTemplate.strokeOpacity = 1;\n            columnTemplate.fillOpacity = theme.seriesOpacity;\n            })\n    }\n\n    render() {\n        return <div id={this.props.chartId} className=\"graph\" />;\n      }\n}"]},"metadata":{},"sourceType":"module"}